---
title: "Learning Reflection"
subtitle: "Week 4"
format:
  html:
    embed-resources: true
editor: visual
---

# Learning reflections

Learning reflections are part of your weekly homework and have a weight of 20% of your final grade. Write a reflection in your own words on the different parts of the weeks material below. You can also use your learning reflections as a notebook as you work through exercises or readings. Write as much as you like, but a minimum of 100 words in total.

# Lecture

**dplyr** is a data wrangling method in R which helps in filtering rows, selecting columns, creating new variables, summarizing data, and joining datasets.

-   relocate( ) - Relocates a column to were its needed

-   rename( ) - Gives columns new names

-   `filter()` — filters a specific column needed

-   `select()` — choose specific columns (data tidying)

-   `mutate()` — add or modify columns

-   `arrange()` — sort rows

-   `summarise()` — calculate a summary

-   `group_by()` — groups data

-   summarise( ) - Narrows to the columns needed

-   `join` ( ) — combine datasets based on keys

These functions can be used together in one code using the pipe operator \|\>

dplyr has s**election helpers** such as:

-   starts_with( ): Starts with a prefix.

-   ends_with( ): Ends with a suffix.

-   contains( ): Contains a literal string.

-   matches( ): Matches a regular expression.

-   num_range( ): Matches a numerical range.

    # Homework Assignment

**Data Importing**

`read_csv()` **function** is used to import data into R for coding. For example,

```{r}
read_csv(here::here("data/country_level_data_0.csv")) 
```

The function imported a file named as "country_level_data_0.csv

here::here( ) helped in getting the data file without using the library( ) function

# Readings

**kable( ) function** is from `knitr` package and is used to create tables in R Markdown, HTML, PDF, or Word outputs.

It is installed using the below code:

```{r}
install.packages("kableExtra")
```

or

```{r}

library(knitr)  # for kable()

```

knitr helps embed R code in documents while kable( ) creates tables in PDF or Word formats.

Example:

```{r}
my_data |>
  filter(score > 50) |>
  select(name, score) |>
  knitr::kable(caption = "Scores above 50")
```

This code will produce a table containing scores above 50 and names of the students.

# Submit learning reflections

## Stage, Commit & Push to GitHub

This final section introduces the workflow you need to follow at the end of each live coding exercise, homework assignment, learning reflection. It ensures that all the changes you have made to files in this repository (folder) are synced with the version that is stored on GitHub. The steps will be described at the end of each of the files.

1.  Open the Git pane in RStudio. It's in the top right corner in a separate tab.
2.  **Stage** your changes by checking appropriate box next to all files (if you select one file with your mouse, you can then highlight them all with Ctrl + A on your keyboard and check all boxes)
3.  Write a meaningful commit message (e.g. "Completed homework assignment 1b) in the **Commit message** box
4.  Click **Commit**. Note that every commit needs to have a commit message associated with it.
5.  Go to your course-material GitHub repo and refresh the page. You should see your commit message next to the updated files.

## Open an issue on GitHub

Once you have ensured that the Quarto document renders without errors and you have pushed all your changes to GitHub, it is to complete the assignment by opening an issue on your course-material GitHub repo.

1.  Navigate to your course-material GitHub repo.
2.  Click on **Issues**, and then **New issue** button.
3.  Write a meaningful title in the **Title** field
4.  Tag the course instructor with using the `@` sign in combination with `larnsce` as the username
5.  Add any questions or comments
